{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maria\\\\OneDrive\\\\Desktop\\\\Work\\\\Mock-Up\\\\Flash-main\\\\frontend\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n//import {\n// MDBBtn,\n// MDBContainer,\n//MDBRow,\n//MDBCol,\n//MDBCard,\n//MDBCardBody,\n// MDBInput,\n// MDBIcon\n//}\n//from 'mdb-react-ui-kit';\nimport { MDBContainer, MDBCol, MDBRow, MDBBtn, MDBIcon, MDBInput, MDBCheckbox } from 'mdb-react-ui-kit';\nimport Overlay from \"react-overlay-component\";\nimport useCollapse from 'react-collapsed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [newPassword,setNewPassword]=useState(\"\")\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const {\n    getCollapseProps,\n    getToggleProps,\n    isExpanded\n  } = useCollapse();\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n    setError(null);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n    // setFirstLoginError(null)\n    setError(null);\n  };\n\n  // const handleNewPasswordChange=(event)=>{\n  // setNewPassword(event.target.value)\n  // setError(null)\n  // }\n\n  const handleLogin = async () => {\n    if (username === \"\") {\n      setError(\"Please enter a username\");\n    } else if (password === \"\") {\n      setError(\"Please enter a password\");\n    } else {\n      const response = fetch(\"/login\", {\n        method: 'POST',\n        body: JSON.stringify({\n          username: username,\n          password: password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        if (!data.id) {\n          setError(data.msg);\n        } else {\n          //console.log(data);\n          setData(data);\n          // Handle data\n          //window.location.href=\"/\"+data.id \n          window.location.href = \"/\";\n        }\n      }).catch(err => {\n        console.log(err.message);\n      });\n    }\n  };\n\n  //const checkboxHandler = () => {\n  // setFirstLoginError(null)\n  // setAgree(!agree);\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 6\n  }, this);\n};\n_s(Login, \"/dh2sXIYU+rl/uwyoMhsLKL55eE=\", false, function () {\n  return [useCollapse];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","MDBContainer","MDBCol","MDBRow","MDBBtn","MDBIcon","MDBInput","MDBCheckbox","Overlay","useCollapse","Login","username","setUsername","password","setPassword","error","setError","data","setData","getCollapseProps","getToggleProps","isExpanded","handleUsernameChange","event","target","value","handlePasswordChange","handleLogin","response","fetch","method","body","JSON","stringify","headers","then","json","id","msg","window","location","href","catch","err","console","log","message"],"sources":["C:/Users/maria/OneDrive/Desktop/Work/Mock-Up/Flash-main/frontend/src/pages/Login/Login.jsx"],"sourcesContent":["\r\nimport React from 'react'\r\nimport { useState,useEffect } from 'react';\r\n//import {\r\n   // MDBBtn,\r\n   // MDBContainer,\r\n    //MDBRow,\r\n    //MDBCol,\r\n    //MDBCard,\r\n    //MDBCardBody,\r\n   // MDBInput,\r\n   // MDBIcon\r\n  //}\r\n  //from 'mdb-react-ui-kit';\r\n  import {MDBContainer, MDBCol, MDBRow, MDBBtn, MDBIcon, MDBInput, MDBCheckbox } from 'mdb-react-ui-kit';\r\n  import Overlay from \"react-overlay-component\";\r\n  import useCollapse from 'react-collapsed';\r\n\r\n\r\nconst Login =()=>{\r\n\r\n\r\n    const [username,setUsername]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n   // const [newPassword,setNewPassword]=useState(\"\")\r\n    const [error,setError] = useState (null)\r\n    \r\n    const [data,setData]=useState(null) \r\n    \r\n\r\n    const { getCollapseProps, getToggleProps, isExpanded } = useCollapse();\r\n\r\n    const handleUsernameChange=(event)=>{\r\n        setUsername(event.target.value)\r\n        setError(null)\r\n    }\r\n    const handlePasswordChange=(event)=>{\r\n        setPassword(event.target.value)\r\n       // setFirstLoginError(null)\r\n        setError(null)\r\n    }\r\n\r\n   // const handleNewPasswordChange=(event)=>{\r\n    // setNewPassword(event.target.value)\r\n     // setError(null)\r\n // }\r\n\r\n    const handleLogin =async()=>{\r\n\r\n        if(username===\"\")\r\n        {\r\n            setError(\"Please enter a username\")\r\n        }\r\n        else if(password===\"\")\r\n        {\r\n            setError(\"Please enter a password\")\r\n        }\r\n        else\r\n        {\r\n            const response =  fetch(\"/login\",\r\n            {\r\n             method:'POST',\r\n             body: JSON.stringify({\r\n                username: username,\r\n                password:password\r\n              }),\r\n            headers:{\r\n                 'Content-Type':'application/json'\r\n             }\r\n             }).\r\n             then((response) => response.json())\r\n             .then((data) => \r\n             {\r\n              if(!data.id) {\r\n                setError(data.msg)\r\n              }\r\n              else{\r\n                //console.log(data);\r\n                setData(data)\r\n                // Handle data\r\n               //window.location.href=\"/\"+data.id \r\n               window.location.href=\"/\"\r\n              }\r\n             })\r\n             .catch((err) => {\r\n                console.log(err.message);\r\n             });\r\n        }\r\n       \r\n    } \r\n\r\n\r\n    //const checkboxHandler = () => {\r\n     // setFirstLoginError(null)\r\n     // setAgree(!agree);\r\n  //  }\r\n\r\n\r\n    return (\r\n     <div >\r\n        {/*<MDBContainer fluid >\r\n    \r\n          <MDBRow className='d-flex justify-content-center align-items-center h-100'>\r\n            <MDBCol col='12'>\r\n    \r\n              <MDBCard className=' text-white my-5 mx-auto' style={{backgroundColor:\"#647cd2\",borderRadius: '1rem', maxWidth: '400px'}}>\r\n                <MDBCardBody className='p-5 d-flex flex-column align-items-center mx-auto w-100'>\r\n    \r\n                  <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\r\n                  <p className=\"text-white-50 mb-5\" style={{textAlign:\"center\"}}>Please enter your username and password!</p>\r\n    \r\n                  <MDBInput wrapperClass='mb-4 mx-5 w-100' labelClass='text-white' label='Username' id='formControlLg' size=\"lg\" onChange={handleUsernameChange} value={username}/>\r\n                  <MDBInput wrapperClass='mb-4 mx-5 w-100' labelClass='text-white' label='Password' id='formControlLg' type='password' size=\"lg\" onChange={handlePasswordChange} value={password}/>\r\n    \r\n                  <button style={{backgroundColor:\"#d55b5c\"}} outline className='generalbutton mx-2 px-5' color='white' size='lg' onClick={handleLogin}>\r\n                    Login\r\n                  </button>\r\n                  {error && <p style={{color:\"#8B0000\"}}>{error}</p>}\r\n    <br></br>\r\n                  <div>\r\n                    <p className=\"mb-0\">Don't have an account? <a href=\"/signup\" class=\"text-white-50 \" >Sign Up</a></p>\r\n    \r\n                  </div>\r\n\r\n                  <div>\r\n                    <p className=\"mb-0\"> <a href=\"/\" class=\"text-white-50 \" >Continue as guest</a></p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"mb-0\"> <a href=\"/user/write-email\" class=\"text-white-50 \" >Forgot password ?</a></p>\r\n                  </div>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n    \r\n            </MDBCol>\r\n          </MDBRow>\r\n    \r\n    </MDBContainer>*/}\r\n        </div>\r\n\r\n      );\r\n\r\n}\r\n\r\nexport default Login"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C;AACG;AACA;AACC;AACA;AACA;AACA;AACD;AACA;AACD;AACA;AACA,SAAQC,YAAY,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACtG,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,WAAW,MAAM,iBAAiB;AAAC;AAG5C,MAAMC,KAAK,GAAE,MAAI;EAAA;EAGb,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACc,QAAQ,EAACC,WAAW,CAAC,GAACf,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACC,MAAM,CAACgB,KAAK,EAACC,QAAQ,CAAC,GAAGjB,QAAQ,CAAE,IAAI,CAAC;EAExC,MAAM,CAACkB,IAAI,EAACC,OAAO,CAAC,GAACnB,QAAQ,CAAC,IAAI,CAAC;EAGnC,MAAM;IAAEoB,gBAAgB;IAAEC,cAAc;IAAEC;EAAW,CAAC,GAAGZ,WAAW,EAAE;EAEtE,MAAMa,oBAAoB,GAAEC,KAAK,IAAG;IAChCX,WAAW,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/BT,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,MAAMU,oBAAoB,GAAEH,KAAK,IAAG;IAChCT,WAAW,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAChC;IACCT,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;;EAEF;EACC;EACC;EACJ;;EAEG,MAAMW,WAAW,GAAE,YAAS;IAExB,IAAGhB,QAAQ,KAAG,EAAE,EAChB;MACIK,QAAQ,CAAC,yBAAyB,CAAC;IACvC,CAAC,MACI,IAAGH,QAAQ,KAAG,EAAE,EACrB;MACIG,QAAQ,CAAC,yBAAyB,CAAC;IACvC,CAAC,MAED;MACI,MAAMY,QAAQ,GAAIC,KAAK,CAAC,QAAQ,EAChC;QACCC,MAAM,EAAC,MAAM;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAClBtB,QAAQ,EAAEA,QAAQ;UAClBE,QAAQ,EAACA;QACX,CAAC,CAAC;QACJqB,OAAO,EAAC;UACH,cAAc,EAAC;QACnB;MACA,CAAC,CAAC,CACFC,IAAI,CAAEP,QAAQ,IAAKA,QAAQ,CAACQ,IAAI,EAAE,CAAC,CAClCD,IAAI,CAAElB,IAAI,IACX;QACC,IAAG,CAACA,IAAI,CAACoB,EAAE,EAAE;UACXrB,QAAQ,CAACC,IAAI,CAACqB,GAAG,CAAC;QACpB,CAAC,MACG;UACF;UACApB,OAAO,CAACD,IAAI,CAAC;UACb;UACD;UACAsB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,GAAG;QACzB;MACD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;MAC3B,CAAC,CAAC;IACP;EAEJ,CAAC;;EAGD;EACC;EACA;EACH;;EAGE,oBACC;IAAA;IAAA;IAAA;EAAA,QAsCS;AAId,CAAC;AAAA,GA1HKpC,KAAK;EAAA,QAWkDD,WAAW;AAAA;AAAA,KAXlEC,KAAK;AA4HX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}