{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'ra-core';\nimport { Stack, CardContent } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Toolbar } from './Toolbar';\n/**\n * Form with a one column layout, one input per line.\n *\n * Pass input components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import { Create, Edit, SimpleForm, TextInput, DateInput, ReferenceManyField, Datagrid, TextField, DateField, EditButton } from 'react-admin';\n * import RichTextInput from 'ra-input-rich-text';\n *\n * export const PostCreate = (props) => (\n *     <Create {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *             <TextInput source=\"teaser\" options={{ multiline: true }} />\n *             <RichTextInput source=\"body\" />\n *             <DateInput label=\"Publication date\" source=\"published_at\" defaultValue={new Date()} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} children Input elements\n * @prop {Object} defaultValues\n * @prop {Function} validate\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n *\n * @param {Props} props\n */\nexport var SimpleForm = function (props) {\n  var children = props.children,\n    className = props.className,\n    _a = props.component,\n    Component = _a === void 0 ? DefaultComponent : _a,\n    sx = props.sx,\n    _b = props.toolbar,\n    toolbar = _b === void 0 ? DefaultToolbar : _b,\n    rest = __rest(props, [\"children\", \"className\", \"component\", \"sx\", \"toolbar\"]);\n  return React.createElement(Form, __assign({}, rest), React.createElement(Component, {\n    className: className,\n    sx: sx\n  }, React.createElement(Stack, __assign({\n    alignItems: \"flex-start\"\n  }, sanitizeRestProps(props)), children)), toolbar !== false ? toolbar : null);\n};\nSimpleForm.propTypes = {\n  children: PropTypes.node,\n  defaultValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  // @ts-ignore\n  record: PropTypes.object,\n  toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\n  validate: PropTypes.func\n};\nvar PREFIX = 'RaSimpleForm';\nvar DefaultComponent = styled(CardContent, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[theme.breakpoints.down('sm')] = {\n    paddingBottom: '5em'\n  }, _b;\n});\nvar DefaultToolbar = React.createElement(Toolbar, null);\n/* eslint-disable @typescript-eslint/no-unused-vars */\nvar sanitizeRestProps = function (_a) {\n  var children = _a.children,\n    className = _a.className,\n    component = _a.component,\n    criteriaMode = _a.criteriaMode,\n    defaultValues = _a.defaultValues,\n    delayError = _a.delayError,\n    onSubmit = _a.onSubmit,\n    record = _a.record,\n    resource = _a.resource,\n    reValidateMode = _a.reValidateMode,\n    sx = _a.sx,\n    toolbar = _a.toolbar,\n    validate = _a.validate,\n    resetOptions = _a.resetOptions,\n    resolver = _a.resolver,\n    sanitizeEmptyValues = _a.sanitizeEmptyValues,\n    shouldFocusError = _a.shouldFocusError,\n    shouldUnregister = _a.shouldUnregister,\n    shouldUseNativeValidation = _a.shouldUseNativeValidation,\n    warnWhenUnsavedChanges = _a.warnWhenUnsavedChanges,\n    props = __rest(_a, [\"children\", \"className\", \"component\", \"criteriaMode\", \"defaultValues\", \"delayError\", \"onSubmit\", \"record\", \"resource\", \"reValidateMode\", \"sx\", \"toolbar\", \"validate\", \"resetOptions\", \"resolver\", \"sanitizeEmptyValues\", \"shouldFocusError\", \"shouldUnregister\", \"shouldUseNativeValidation\", \"warnWhenUnsavedChanges\"]);\n  return props;\n};\n/* eslint-enable @typescript-eslint/no-unused-vars */","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,QAAmB,SAAS;AACzC,SAASC,KAAK,EAAEC,WAAW,QAA6B,eAAe;AACvE,SAASC,MAAM,QAAQ,sBAAsB;AAE7C,SAASC,OAAO,QAAQ,WAAW;AAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAO,IAAMC,UAAU,GAAG,UAACC,KAAsB;EAEzC,YAAQ,GAMRA,KAAK,SANG;IACRC,SAAS,GAKTD,KAAK,UALI;IACTE,KAIAF,KAAK,UAJkC;IAA5BG,SAAS,mBAAGC,gBAAgB;IACvCC,EAAE,GAGFL,KAAK,GAHH;IACFM,KAEAN,KAAK,QAFmB;IAAxBO,OAAO,mBAAGC,cAAc;IACrBC,IAAI,UACPT,KAAK,EAPH,uDAOL,CADU;EAEX,OACIR,oBAACE,IAAI,eAAKe,IAAI,GACVjB,oBAACW,SAAS;IAACF,SAAS,EAAEA,SAAS;IAAEI,EAAE,EAAEA;EAAE,GACnCb,oBAACG,KAAK;IAACe,UAAU,EAAC;EAAY,GAAKC,iBAAiB,CAACX,KAAK,CAAC,GACtDY,QAAQ,CACL,CACA,EACXL,OAAO,KAAK,KAAK,GAAGA,OAAO,GAAG,IAAI,CAChC;AAEf,CAAC;AAEDR,UAAU,CAACc,SAAS,GAAG;EACnBD,QAAQ,EAAEnB,SAAS,CAACqB,IAAI;EACxBC,aAAa,EAAEtB,SAAS,CAACuB,SAAS,CAAC,CAACvB,SAAS,CAACwB,MAAM,EAAExB,SAAS,CAACyB,IAAI,CAAC,CAAC;EACtE;EACAC,MAAM,EAAE1B,SAAS,CAACwB,MAAM;EACxBV,OAAO,EAAEd,SAAS,CAACuB,SAAS,CAAC,CAACvB,SAAS,CAAC2B,OAAO,EAAE3B,SAAS,CAAC4B,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3EC,QAAQ,EAAE7B,SAAS,CAACyB;CACvB;AAaD,IAAMK,MAAM,GAAG,cAAc;AAE7B,IAAMnB,gBAAgB,GAAGP,MAAM,CAACD,WAAW,EAAE;EACzC4B,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,UAACzB,KAAK,EAAE0B,MAAM;IAAK,aAAM,CAACC,IAAI;EAAX;CACzC,CAAC,CAAC,UAACzB,EAAS;;MAAP0B,KAAK;EAAO,gBACdtB,GAACsB,KAAK,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,IAAG;IAC5BC,aAAa,EAAE;GAClB;AAHa,CAIhB,CAAC;AAEH,IAAMvB,cAAc,GAAGhB,oBAACM,OAAO,OAAG;AAElC;AACA,IAAMa,iBAAiB,GAAG,UAACT,EAsBT;EArBd,YAAQ;IACRD,SAAS;IACT+B,SAAS;IACTC,YAAY;IACZlB,aAAa;IACbmB,UAAU;IACVC,QAAQ;IACRhB,MAAM;IACNiB,QAAQ;IACRC,cAAc;IACdhC,EAAE;IACFE,OAAO;IACPe,QAAQ;IACRgB,YAAY;IACZC,QAAQ;IACRC,mBAAmB;IACnBC,gBAAgB;IAChBC,gBAAgB;IAChBC,yBAAyB;IACzBC,sBAAsB;IACnB5C,KAAK,cArBe,wTAsB1B,CADW;EACW,YAAK;CAAA;AAC5B","names":["React","PropTypes","Form","Stack","CardContent","styled","Toolbar","SimpleForm","props","className","_a","Component","DefaultComponent","sx","_b","toolbar","DefaultToolbar","rest","alignItems","sanitizeRestProps","children","propTypes","node","defaultValues","oneOfType","object","func","record","element","oneOf","validate","PREFIX","name","overridesResolver","styles","root","theme","breakpoints","down","paddingBottom","component","criteriaMode","delayError","onSubmit","resource","reValidateMode","resetOptions","resolver","sanitizeEmptyValues","shouldFocusError","shouldUnregister","shouldUseNativeValidation","warnWhenUnsavedChanges"],"sources":["D:\\Work\\Mock-Up\\Flash-main\\frontend\\node_modules\\react-admin\\node_modules\\ra-ui-materialui\\src\\form\\SimpleForm.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormProps } from 'ra-core';\nimport { Stack, CardContent, SxProps, StackProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport { Toolbar } from './Toolbar';\n\n/**\n * Form with a one column layout, one input per line.\n *\n * Pass input components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import { Create, Edit, SimpleForm, TextInput, DateInput, ReferenceManyField, Datagrid, TextField, DateField, EditButton } from 'react-admin';\n * import RichTextInput from 'ra-input-rich-text';\n *\n * export const PostCreate = (props) => (\n *     <Create {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *             <TextInput source=\"teaser\" options={{ multiline: true }} />\n *             <RichTextInput source=\"body\" />\n *             <DateInput label=\"Publication date\" source=\"published_at\" defaultValue={new Date()} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} children Input elements\n * @prop {Object} defaultValues\n * @prop {Function} validate\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n *\n * @param {Props} props\n */\nexport const SimpleForm = (props: SimpleFormProps) => {\n    const {\n        children,\n        className,\n        component: Component = DefaultComponent,\n        sx,\n        toolbar = DefaultToolbar,\n        ...rest\n    } = props;\n    return (\n        <Form {...rest}>\n            <Component className={className} sx={sx}>\n                <Stack alignItems=\"flex-start\" {...sanitizeRestProps(props)}>\n                    {children}\n                </Stack>\n            </Component>\n            {toolbar !== false ? toolbar : null}\n        </Form>\n    );\n};\n\nSimpleForm.propTypes = {\n    children: PropTypes.node,\n    defaultValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    // @ts-ignore\n    record: PropTypes.object,\n    toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\n    validate: PropTypes.func,\n};\n\nexport interface SimpleFormProps\n    extends Omit<FormProps, 'render'>,\n        Omit<StackProps, 'onSubmit'> {\n    children: ReactNode;\n    className?: string;\n    component?: React.ComponentType<any>;\n    defaultValues?: any;\n    toolbar?: ReactElement | false;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaSimpleForm';\n\nconst DefaultComponent = styled(CardContent, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [theme.breakpoints.down('sm')]: {\n        paddingBottom: '5em',\n    },\n}));\n\nconst DefaultToolbar = <Toolbar />;\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nconst sanitizeRestProps = ({\n    children,\n    className,\n    component,\n    criteriaMode,\n    defaultValues,\n    delayError,\n    onSubmit,\n    record,\n    resource,\n    reValidateMode,\n    sx,\n    toolbar,\n    validate,\n    resetOptions,\n    resolver,\n    sanitizeEmptyValues,\n    shouldFocusError,\n    shouldUnregister,\n    shouldUseNativeValidation,\n    warnWhenUnsavedChanges,\n    ...props\n}: SimpleFormProps) => props;\n/* eslint-enable @typescript-eslint/no-unused-vars */\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}