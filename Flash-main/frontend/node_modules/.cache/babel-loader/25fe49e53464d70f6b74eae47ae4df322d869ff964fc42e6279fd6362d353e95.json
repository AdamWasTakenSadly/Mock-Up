{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { warning } from 'ra-core';\nimport { PageTitleConfigurable } from './PageTitleConfigurable';\nexport var Title = function (props) {\n  var defaultTitle = props.defaultTitle,\n    title = props.title,\n    preferenceKey = props.preferenceKey,\n    rest = __rest(props, [\"defaultTitle\", \"title\", \"preferenceKey\"]);\n  var _a = useState(function () {\n      return typeof document !== 'undefined' ? document.getElementById('react-admin-title') : null;\n    }),\n    container = _a[0],\n    setContainer = _a[1];\n  // on first mount, we don't have the container yet, so we wait for it\n  useEffect(function () {\n    setContainer(function (container) {\n      var isInTheDom = typeof document !== 'undefined' && document.body.contains(container);\n      if (container && isInTheDom) return container;\n      return typeof document !== 'undefined' ? document.getElementById('react-admin-title') : null;\n    });\n  }, []);\n  if (!container) return null;\n  warning(!defaultTitle && !title, 'Missing title prop in <Title> element');\n  return createPortal(React.createElement(PageTitleConfigurable, __assign({\n    title: title,\n    defaultTitle: defaultTitle,\n    preferenceKey: preferenceKey\n  }, rest)), container);\n};\nexport var TitlePropType = PropTypes.oneOfType([PropTypes.string, PropTypes.element]);\nTitle.propTypes = {\n  defaultTitle: PropTypes.string,\n  className: PropTypes.string,\n  record: PropTypes.any,\n  title: TitlePropType\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAmBC,OAAO,QAAQ,SAAS;AAE3C,SAASC,qBAAqB,QAAQ,yBAAyB;AAE/D,OAAO,IAAMC,KAAK,GAAG,UAACC,KAAiB;EAC3B,gBAAY,GAAoCA,KAAK,aAAzC;IAAEC,KAAK,GAA6BD,KAAK,MAAlC;IAAEE,aAAa,GAAcF,KAAK,cAAnB;IAAKG,IAAI,UAAKH,KAAK,EAAvD,0CAA+C,CAAF;EAC7C,SAA4BN,QAAQ,CAAC;MACvC,cAAOU,QAAQ,KAAK,WAAW,GACzBA,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,GAC5C,IAAI;IAFV,CAEU,CACb;IAJMC,SAAS;IAAEC,YAAY,QAI7B;EAED;EACAd,SAAS,CAAC;IACNc,YAAY,CAAC,mBAAS;MAClB,IAAMC,UAAU,GACZ,OAAOJ,QAAQ,KAAK,WAAW,IAC/BA,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAACJ,SAAS,CAAC;MACrC,IAAIA,SAAS,IAAIE,UAAU,EAAE,OAAOF,SAAS;MAC7C,OAAO,OAAOF,QAAQ,KAAK,WAAW,GAChCA,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,GAC5C,IAAI;IACd,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACC,SAAS,EAAE,OAAO,IAAI;EAE3BT,OAAO,CAAC,CAACc,YAAY,IAAI,CAACV,KAAK,EAAE,uCAAuC,CAAC;EAEzE,OAAON,YAAY,CACfH,oBAACM,qBAAqB;IAClBG,KAAK,EAAEA,KAAK;IACZU,YAAY,EAAEA,YAAY;IAC1BT,aAAa,EAAEA;EAAa,GACxBC,IAAI,EACV,EACFG,SAAS,CACZ;AACL,CAAC;AAED,OAAO,IAAMM,aAAa,GAAGhB,SAAS,CAACiB,SAAS,CAAC,CAC7CjB,SAAS,CAACkB,MAAM,EAChBlB,SAAS,CAACmB,OAAO,CACpB,CAAC;AAEFhB,KAAK,CAACiB,SAAS,GAAG;EACdL,YAAY,EAAEf,SAAS,CAACkB,MAAM;EAC9BG,SAAS,EAAErB,SAAS,CAACkB,MAAM;EAC3BI,MAAM,EAAEtB,SAAS,CAACuB,GAAG;EACrBlB,KAAK,EAAEW;CACV","names":["React","useEffect","useState","createPortal","PropTypes","warning","PageTitleConfigurable","Title","props","title","preferenceKey","rest","document","getElementById","container","setContainer","isInTheDom","body","contains","defaultTitle","TitlePropType","oneOfType","string","element","propTypes","className","record","any"],"sources":["D:\\Work\\Mock-Up\\Flash-main\\frontend\\node_modules\\react-admin\\node_modules\\ra-ui-materialui\\src\\layout\\Title.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ReactElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { RaRecord, warning } from 'ra-core';\n\nimport { PageTitleConfigurable } from './PageTitleConfigurable';\n\nexport const Title = (props: TitleProps) => {\n    const { defaultTitle, title, preferenceKey, ...rest } = props;\n    const [container, setContainer] = useState(() =>\n        typeof document !== 'undefined'\n            ? document.getElementById('react-admin-title')\n            : null\n    );\n\n    // on first mount, we don't have the container yet, so we wait for it\n    useEffect(() => {\n        setContainer(container => {\n            const isInTheDom =\n                typeof document !== 'undefined' &&\n                document.body.contains(container);\n            if (container && isInTheDom) return container;\n            return typeof document !== 'undefined'\n                ? document.getElementById('react-admin-title')\n                : null;\n        });\n    }, []);\n\n    if (!container) return null;\n\n    warning(!defaultTitle && !title, 'Missing title prop in <Title> element');\n\n    return createPortal(\n        <PageTitleConfigurable\n            title={title}\n            defaultTitle={defaultTitle}\n            preferenceKey={preferenceKey}\n            {...rest}\n        />,\n        container\n    );\n};\n\nexport const TitlePropType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n]);\n\nTitle.propTypes = {\n    defaultTitle: PropTypes.string,\n    className: PropTypes.string,\n    record: PropTypes.any,\n    title: TitlePropType,\n};\n\nexport interface TitleProps {\n    className?: string;\n    defaultTitle?: string;\n    record?: Partial<RaRecord>;\n    title?: string | ReactElement;\n    preferenceKey?: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}