{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { useFormContext, useWatch } from 'react-hook-form';\n// hook taken from https://react-hook-form.com/docs/usewatch/#rules\nexport var useFormValues = function () {\n  var getValues = useFormContext().getValues;\n  return __assign(__assign({}, useWatch()), getValues());\n};","map":{"version":3,"mappings":";;;;;;;;;;AAAA,SAAsBA,cAAc,EAAEC,QAAQ,QAAQ,iBAAiB;AAEvE;AACA,OAAO,IAAMC,aAAa,GAAG;EAGjB,aAAS,GAAKF,cAAc,EAAgB,UAAnC;EAEjB,6BACOC,QAAQ,EAAE,GACVE,SAAS,EAAE;AAEtB,CAAC","names":["useFormContext","useWatch","useFormValues","getValues"],"sources":["D:\\Work\\Mock-Up\\Flash-main\\frontend\\node_modules\\react-admin\\node_modules\\ra-core\\src\\form\\useFormValues.ts"],"sourcesContent":["import { FieldValues, useFormContext, useWatch } from 'react-hook-form';\n\n// hook taken from https://react-hook-form.com/docs/usewatch/#rules\nexport const useFormValues = <\n    TFieldValues extends FieldValues = FieldValues\n>() => {\n    const { getValues } = useFormContext<TFieldValues>();\n\n    return {\n        ...useWatch(), // subscribe to form value updates\n        ...getValues(), // always merge with latest form values\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}