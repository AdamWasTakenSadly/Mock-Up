{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Mock-Up\\\\Flash-main\\\\frontend\\\\src\\\\pages\\\\CourseReviews\\\\CourseReviews.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ReviewView from '../../components/ReviewView/ReviewView';\nimport { CardTitle } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseReviews = () => {\n  _s();\n  const [reviews, setReviews] = useState(null);\n  const params = useParams();\n  const id = params.id;\n  useEffect(() => {\n    const fetchReviews = async () => {\n      //const response = await fetch ('/courses/'+id+'/reviews')\n      const json = await response.json();\n      console.log(json);\n      if (response.ok) {\n        setReviews(json);\n      }\n    };\n    fetchReviews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n      tag: \"h1\",\n      children: \"Reviews Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), reviews && reviews[\"reviews\"].map(review => /*#__PURE__*/_jsxDEV(ReviewView, {\n      review: review\n    }, review, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(CourseReviews, \"dcRBT+8FxZVnsLKEZJffGmHb/ak=\", false, function () {\n  return [useParams];\n});\n_c = CourseReviews;\nexport default CourseReviews;\nvar _c;\n$RefreshReg$(_c, \"CourseReviews\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ReviewView","CardTitle","CourseReviews","reviews","setReviews","params","id","fetchReviews","json","response","console","log","ok","map","review"],"sources":["D:/Work/Mock-Up/Flash-main/frontend/src/pages/CourseReviews/CourseReviews.jsx"],"sourcesContent":["import React from 'react'\r\nimport {useState,useEffect} from \"react\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReviewView from '../../components/ReviewView/ReviewView';\r\nimport {CardTitle} from \"reactstrap\";\r\n\r\nconst CourseReviews=()=>{\r\n\r\n    const [reviews,setReviews]=useState(null)\r\n    const params = useParams();\r\n    const id = params.id\r\n\r\n   useEffect(()=>{\r\n        const fetchReviews = async ()=>{\r\n            //const response = await fetch ('/courses/'+id+'/reviews')\r\n            const json = await response.json()\r\n    \r\n            console.log(json)\r\n    \r\n            if (response.ok)\r\n                {\r\n                    setReviews(json)\r\n                }\r\n        }\r\n    \r\n        fetchReviews()\r\n    \r\n       },[])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CardTitle tag=\"h1\">Reviews Page</CardTitle>\r\n            {reviews && reviews[\"reviews\"].map(review => (\r\n              <ReviewView key={review}  review={review}></ReviewView>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CourseReviews"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,SAAQC,SAAS,QAAO,YAAY;AAAC;AAErC,MAAMC,aAAa,GAAC,MAAI;EAAA;EAEpB,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACP,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAMQ,MAAM,GAAGN,SAAS,EAAE;EAC1B,MAAMO,EAAE,GAAGD,MAAM,CAACC,EAAE;EAErBR,SAAS,CAAC,MAAI;IACT,MAAMS,YAAY,GAAG,YAAU;MAC3B;MACA,MAAMC,IAAI,GAAG,MAAMC,QAAQ,CAACD,IAAI,EAAE;MAElCE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAEjB,IAAIC,QAAQ,CAACG,EAAE,EACX;QACIR,UAAU,CAACI,IAAI,CAAC;MACpB;IACR,CAAC;IAEDD,YAAY,EAAE;EAEf,CAAC,EAAC,EAAE,CAAC;EAIR,oBACI;IAAA,wBACI,QAAC,SAAS;MAAC,GAAG,EAAC,IAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,EAC3CJ,OAAO,IAAIA,OAAO,CAAC,SAAS,CAAC,CAACU,GAAG,CAACC,MAAM,iBACvC,QAAC,UAAU;MAAe,MAAM,EAAEA;IAAO,GAAxBA,MAAM;MAAA;MAAA;MAAA;IAAA,QACxB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAjCKZ,aAAa;EAAA,QAGAH,SAAS;AAAA;AAAA,KAHtBG,aAAa;AAoCnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}