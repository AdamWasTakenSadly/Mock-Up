{"ast":null,"code":"import * as React from 'react';\nimport { isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { isValidElementType } from 'react-is';\nimport { ResourceContextProvider } from './ResourceContextProvider';\nexport var Resource = function (props) {\n  var create = props.create,\n    edit = props.edit,\n    list = props.list,\n    name = props.name,\n    show = props.show;\n  return React.createElement(ResourceContextProvider, {\n    value: name\n  }, React.createElement(Routes, null, create && React.createElement(Route, {\n    path: \"create/*\",\n    element: getElement(create)\n  }), show && React.createElement(Route, {\n    path: \":id/show/*\",\n    element: getElement(show)\n  }), edit && React.createElement(Route, {\n    path: \":id/*\",\n    element: getElement(edit)\n  }), list && React.createElement(Route, {\n    path: \"/*\",\n    element: getElement(list)\n  }), props.children));\n};\nvar getElement = function (ElementOrComponent) {\n  if (isValidElement(ElementOrComponent)) {\n    return ElementOrComponent;\n  }\n  if (isValidElementType(ElementOrComponent)) {\n    return React.createElement(ElementOrComponent, null);\n  }\n  return null;\n};\nResource.raName = 'Resource';\nResource.registerResource = function (_a) {\n  var create = _a.create,\n    edit = _a.edit,\n    icon = _a.icon,\n    list = _a.list,\n    name = _a.name,\n    options = _a.options,\n    show = _a.show,\n    recordRepresentation = _a.recordRepresentation,\n    hasCreate = _a.hasCreate,\n    hasEdit = _a.hasEdit,\n    hasShow = _a.hasShow;\n  return {\n    name: name,\n    options: options,\n    hasList: !!list,\n    hasCreate: !!create || !!hasCreate,\n    hasEdit: !!edit || !!hasEdit,\n    hasShow: !!show || !!hasShow,\n    icon: icon,\n    recordRepresentation: recordRepresentation\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAsCC,cAAc,QAAQ,OAAO;AACnE,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,kBAAkB,QAAQ,UAAU;AAG7C,SAASC,uBAAuB,QAAQ,2BAA2B;AAEnE,OAAO,IAAMC,QAAQ,GAAG,UAACC,KAAoB;EACjC,UAAM,GAA6BA,KAAK,OAAlC;IAAEC,IAAI,GAAuBD,KAAK,KAA5B;IAAEE,IAAI,GAAiBF,KAAK,KAAtB;IAAEG,IAAI,GAAWH,KAAK,KAAhB;IAAEI,IAAI,GAAKJ,KAAK,KAAV;EAEtC,OACIP,oBAACK,uBAAuB;IAACO,KAAK,EAAEF;EAAI,GAChCV,oBAACG,MAAM,QACFU,MAAM,IACHb,oBAACE,KAAK;IAACY,IAAI,EAAC,UAAU;IAACC,OAAO,EAAEC,UAAU,CAACH,MAAM;EAAC,EACrD,EACAF,IAAI,IAAIX,oBAACE,KAAK;IAACY,IAAI,EAAC,YAAY;IAACC,OAAO,EAAEC,UAAU,CAACL,IAAI;EAAC,EAAI,EAC9DH,IAAI,IAAIR,oBAACE,KAAK;IAACY,IAAI,EAAC,OAAO;IAACC,OAAO,EAAEC,UAAU,CAACR,IAAI;EAAC,EAAI,EACzDC,IAAI,IAAIT,oBAACE,KAAK;IAACY,IAAI,EAAC,IAAI;IAACC,OAAO,EAAEC,UAAU,CAACP,IAAI;EAAC,EAAI,EACtDF,KAAK,CAACU,QAAQ,CACV,CACa;AAElC,CAAC;AAED,IAAMD,UAAU,GAAG,UAACE,kBAAqD;EACrE,IAAIjB,cAAc,CAACiB,kBAAkB,CAAC,EAAE;IACpC,OAAOA,kBAAkB;;EAG7B,IAAId,kBAAkB,CAACc,kBAAkB,CAAC,EAAE;IACxC,OAAOlB,oBAACkB,kBAAkB,OAAG;;EAGjC,OAAO,IAAI;AACf,CAAC;AAEDZ,QAAQ,CAACa,MAAM,GAAG,UAAU;AAE5Bb,QAAQ,CAACc,gBAAgB,GAAG,UAACC,EAYb;MAXZR,MAAM;IACNL,IAAI;IACJc,IAAI;IACJb,IAAI;IACJC,IAAI;IACJa,OAAO;IACPZ,IAAI;IACJa,oBAAoB;IACpBC,SAAS;IACTC,OAAO;IACPC,OAAO;EACU,OAAC;IAClBjB,IAAI;IACJa,OAAO;IACPK,OAAO,EAAE,CAAC,CAACnB,IAAI;IACfgB,SAAS,EAAE,CAAC,CAACZ,MAAM,IAAI,CAAC,CAACY,SAAS;IAClCC,OAAO,EAAE,CAAC,CAAClB,IAAI,IAAI,CAAC,CAACkB,OAAO;IAC5BC,OAAO,EAAE,CAAC,CAAChB,IAAI,IAAI,CAAC,CAACgB,OAAO;IAC5BL,IAAI;IACJE,oBAAoB;GACvB;AAToB,CASnB","names":["React","isValidElement","Route","Routes","isValidElementType","ResourceContextProvider","Resource","props","edit","list","name","show","value","create","path","element","getElement","children","ElementOrComponent","raName","registerResource","_a","icon","options","recordRepresentation","hasCreate","hasEdit","hasShow","hasList"],"sources":["D:\\Work\\Mock-Up\\Flash-main\\frontend\\node_modules\\react-admin\\node_modules\\ra-core\\src\\core\\Resource.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ComponentType, ReactElement, isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { isValidElementType } from 'react-is';\n\nimport { ResourceProps } from '../types';\nimport { ResourceContextProvider } from './ResourceContextProvider';\n\nexport const Resource = (props: ResourceProps) => {\n    const { create, edit, list, name, show } = props;\n\n    return (\n        <ResourceContextProvider value={name}>\n            <Routes>\n                {create && (\n                    <Route path=\"create/*\" element={getElement(create)} />\n                )}\n                {show && <Route path=\":id/show/*\" element={getElement(show)} />}\n                {edit && <Route path=\":id/*\" element={getElement(edit)} />}\n                {list && <Route path=\"/*\" element={getElement(list)} />}\n                {props.children}\n            </Routes>\n        </ResourceContextProvider>\n    );\n};\n\nconst getElement = (ElementOrComponent: ComponentType<any> | ReactElement) => {\n    if (isValidElement(ElementOrComponent)) {\n        return ElementOrComponent;\n    }\n\n    if (isValidElementType(ElementOrComponent)) {\n        return <ElementOrComponent />;\n    }\n\n    return null;\n};\n\nResource.raName = 'Resource';\n\nResource.registerResource = ({\n    create,\n    edit,\n    icon,\n    list,\n    name,\n    options,\n    show,\n    recordRepresentation,\n    hasCreate,\n    hasEdit,\n    hasShow,\n}: ResourceProps) => ({\n    name,\n    options,\n    hasList: !!list,\n    hasCreate: !!create || !!hasCreate,\n    hasEdit: !!edit || !!hasEdit,\n    hasShow: !!show || !!hasShow,\n    icon,\n    recordRepresentation,\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}