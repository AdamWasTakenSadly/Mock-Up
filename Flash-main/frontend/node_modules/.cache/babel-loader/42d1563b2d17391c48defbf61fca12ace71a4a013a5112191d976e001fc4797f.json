{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\nvar UrlFieldImpl = function (props) {\n  var className = props.className,\n    emptyText = props.emptyText,\n    source = props.source,\n    rest = __rest(props, [\"className\", \"emptyText\", \"source\"]);\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  var translate = useTranslate();\n  if (value == null) {\n    return React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n      _: emptyText\n    }));\n  }\n  return React.createElement(Link, __assign({\n    className: className,\n    href: value,\n    onClick: stopPropagation,\n    variant: \"body2\"\n  }, sanitizeFieldRestProps(rest)), value);\n};\nUrlFieldImpl.propTypes = fieldPropTypes;\nUrlFieldImpl.displayName = 'UrlFieldImpl';\nexport var UrlField = genericMemo(UrlFieldImpl);\n// useful to prevent click bubbling in a Datagrid with rowClick\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAChD,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,SAAS;AACxD,SAAqBC,cAAc,QAAQ,SAAS;AACpD,SAASC,WAAW,QAAQ,eAAe;AAE3C,IAAMC,YAAY,GAAG,UAGjBC,KAAgC;EAExB,aAAS,GAAiCA,KAAK,UAAtC;IAAEC,SAAS,GAAsBD,KAAK,UAA3B;IAAEE,MAAM,GAAcF,KAAK,OAAnB;IAAKG,IAAI,UAAKH,KAAK,EAAjD,oCAAyC,CAAF;EAC7C,IAAMI,MAAM,GAAGT,gBAAgB,CAACK,KAAK,CAAC;EACtC,IAAMK,KAAK,GAAGd,GAAG,CAACa,MAAM,EAAEF,MAAM,CAAC;EACjC,IAAMI,SAAS,GAAGV,YAAY,EAAE;EAEhC,IAAIS,KAAK,IAAI,IAAI,EAAE;IACf,OACIf,oBAACG,UAAU;MACPc,SAAS,EAAC,MAAM;MAChBC,OAAO,EAAC,OAAO;MACfC,SAAS,EAAEA;IAAS,GAChBjB,sBAAsB,CAACW,IAAI,CAAC,GAE/BF,SAAS,IAAIK,SAAS,CAACL,SAAS,EAAE;MAAES,CAAC,EAAET;IAAS,CAAE,CAAC,CAC3C;;EAIrB,OACIX,oBAACI,IAAI;IACDe,SAAS,EAAEA,SAAS;IACpBE,IAAI,EAAEN,KAAK;IACXO,OAAO,EAAEC,eAAe;IACxBL,OAAO,EAAC;EAAO,GACXhB,sBAAsB,CAACW,IAAI,CAAC,GAE/BE,KAAK,CACH;AAEf,CAAC;AAEDN,YAAY,CAACe,SAAS,GAAGjB,cAAc;AACvCE,YAAY,CAACgB,WAAW,GAAG,cAAc;AAEzC,OAAO,IAAMC,QAAQ,GAAGlB,WAAW,CAACC,YAAY,CAAC;AAOjD;AACA,IAAMc,eAAe,GAAG,WAAC;EAAI,QAAC,CAACA,eAAe,EAAE;AAAnB,CAAmB","names":["React","get","sanitizeFieldRestProps","Typography","Link","useRecordContext","useTranslate","fieldPropTypes","genericMemo","UrlFieldImpl","props","emptyText","source","rest","record","value","translate","component","variant","className","_","href","onClick","stopPropagation","propTypes","displayName","UrlField"],"sources":["D:\\Work\\Mock-Up\\Flash-main\\frontend\\node_modules\\react-admin\\node_modules\\ra-ui-materialui\\src\\field\\UrlField.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AnchorHTMLAttributes } from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { FieldProps, fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\n\nconst UrlFieldImpl = <\n    RecordType extends Record<string, unknown> = Record<string, any>\n>(\n    props: UrlFieldProps<RecordType>\n) => {\n    const { className, emptyText, source, ...rest } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n    const translate = useTranslate();\n\n    if (value == null) {\n        return (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText && translate(emptyText, { _: emptyText })}\n            </Typography>\n        );\n    }\n\n    return (\n        <Link\n            className={className}\n            href={value}\n            onClick={stopPropagation}\n            variant=\"body2\"\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {value}\n        </Link>\n    );\n};\n\nUrlFieldImpl.propTypes = fieldPropTypes;\nUrlFieldImpl.displayName = 'UrlFieldImpl';\n\nexport const UrlField = genericMemo(UrlFieldImpl);\n\nexport interface UrlFieldProps<\n    RecordType extends Record<string, unknown> = Record<string, any>\n> extends FieldProps<RecordType>,\n        AnchorHTMLAttributes<HTMLAnchorElement> {}\n\n// useful to prevent click bubbling in a Datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}