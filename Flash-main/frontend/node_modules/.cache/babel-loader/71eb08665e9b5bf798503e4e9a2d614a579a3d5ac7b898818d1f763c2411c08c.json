{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport inflection from 'inflection';\nimport { useDeleteWithConfirmController, useRecordContext, useResourceContext, useTranslate } from 'ra-core';\nimport { Confirm } from '../layout';\nimport { Button } from './Button';\nexport var DeleteWithConfirmButton = function (props) {\n  var className = props.className,\n    _a = props.confirmTitle,\n    confirmTitle = _a === void 0 ? 'ra.message.delete_title' : _a,\n    _b = props.confirmContent,\n    confirmContent = _b === void 0 ? 'ra.message.delete_content' : _b,\n    _c = props.icon,\n    icon = _c === void 0 ? defaultIcon : _c,\n    _d = props.label,\n    label = _d === void 0 ? 'ra.action.delete' : _d,\n    _e = props.mutationMode,\n    mutationMode = _e === void 0 ? 'pessimistic' : _e,\n    onClick = props.onClick,\n    _f = props.redirect,\n    redirect = _f === void 0 ? 'list' : _f,\n    _g = props.translateOptions,\n    translateOptions = _g === void 0 ? {} : _g,\n    mutationOptions = props.mutationOptions,\n    _h = props.color,\n    color = _h === void 0 ? 'error' : _h,\n    rest = __rest(props, [\"className\", \"confirmTitle\", \"confirmContent\", \"icon\", \"label\", \"mutationMode\", \"onClick\", \"redirect\", \"translateOptions\", \"mutationOptions\", \"color\"]);\n  var translate = useTranslate();\n  var record = useRecordContext(props);\n  var resource = useResourceContext(props);\n  var _j = useDeleteWithConfirmController({\n      record: record,\n      redirect: redirect,\n      mutationMode: mutationMode,\n      onClick: onClick,\n      mutationOptions: mutationOptions,\n      resource: resource\n    }),\n    open = _j.open,\n    isLoading = _j.isLoading,\n    handleDialogOpen = _j.handleDialogOpen,\n    handleDialogClose = _j.handleDialogClose,\n    handleDelete = _j.handleDelete;\n  return React.createElement(Fragment, null, React.createElement(Button, __assign({\n    onClick: handleDialogOpen,\n    label: label,\n    className: clsx('ra-delete-button', className),\n    key: \"button\",\n    color: color\n  }, rest), icon), React.createElement(Confirm, {\n    isOpen: open,\n    loading: isLoading,\n    title: confirmTitle,\n    content: confirmContent,\n    translateOptions: __assign({\n      name: translate(\"resources.\".concat(resource, \".forcedCaseName\"), {\n        smart_count: 1,\n        _: inflection.humanize(translate(\"resources.\".concat(resource, \".name\"), {\n          smart_count: 1,\n          _: inflection.singularize(resource)\n        }), true)\n      }),\n      id: record.id\n    }, translateOptions),\n    onConfirm: handleDelete,\n    onClose: handleDialogClose\n  }));\n};\nvar defaultIcon = React.createElement(ActionDelete, null);\nDeleteWithConfirmButton.propTypes = {\n  className: PropTypes.string,\n  confirmTitle: PropTypes.string,\n  confirmContent: PropTypes.string,\n  label: PropTypes.string,\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  record: PropTypes.any,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string,\n  icon: PropTypes.element,\n  translateOptions: PropTypes.object\n};","map":{"version":3,"mappings":"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","names":["React","Fragment","PropTypes","ActionDelete","clsx","inflection","useDeleteWithConfirmController","useRecordContext","useResourceContext","useTranslate","Confirm","Button","DeleteWithConfirmButton","props","_a","confirmTitle","_b","confirmContent","_c","icon","defaultIcon","_d","label","_e","mutationMode","onClick","_f","redirect","_g","translateOptions","mutationOptions","_h","color","rest","translate","record","resource","open","isLoading","handleDialogOpen","handleDialogClose","handleDelete","className","key","isOpen","loading","title","content","name","smart_count","_","humanize","singularize","id","onConfirm","onClose","propTypes","string","oneOf","any","oneOfType","bool","func","element","object"],"sources":["D:\\Work\\Mock-Up\\Flash-main\\frontend\\node_modules\\react-admin\\node_modules\\ra-ui-materialui\\src\\button\\DeleteWithConfirmButton.tsx"],"sourcesContent":["import React, { Fragment, ReactEventHandler, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport inflection from 'inflection';\nimport { UseMutationOptions } from 'react-query';\nimport {\n    MutationMode,\n    RaRecord,\n    DeleteParams,\n    useDeleteWithConfirmController,\n    useRecordContext,\n    useResourceContext,\n    useTranslate,\n    RedirectionSideEffect,\n} from 'ra-core';\n\nimport { Confirm } from '../layout';\nimport { Button, ButtonProps } from './Button';\n\nexport const DeleteWithConfirmButton = <RecordType extends RaRecord = any>(\n    props: DeleteWithConfirmButtonProps<RecordType>\n) => {\n    const {\n        className,\n        confirmTitle = 'ra.message.delete_title',\n        confirmContent = 'ra.message.delete_content',\n        icon = defaultIcon,\n        label = 'ra.action.delete',\n        mutationMode = 'pessimistic',\n        onClick,\n        redirect = 'list',\n        translateOptions = {},\n        mutationOptions,\n        color = 'error',\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n\n    const {\n        open,\n        isLoading,\n        handleDialogOpen,\n        handleDialogClose,\n        handleDelete,\n    } = useDeleteWithConfirmController({\n        record,\n        redirect,\n        mutationMode,\n        onClick,\n        mutationOptions,\n        resource,\n    });\n\n    return (\n        <Fragment>\n            <Button\n                onClick={handleDialogOpen}\n                label={label}\n                className={clsx('ra-delete-button', className)}\n                key=\"button\"\n                color={color}\n                {...rest}\n            >\n                {icon}\n            </Button>\n            <Confirm\n                isOpen={open}\n                loading={isLoading}\n                title={confirmTitle}\n                content={confirmContent}\n                translateOptions={{\n                    name: translate(`resources.${resource}.forcedCaseName`, {\n                        smart_count: 1,\n                        _: inflection.humanize(\n                            translate(`resources.${resource}.name`, {\n                                smart_count: 1,\n                                _: inflection.singularize(resource),\n                            }),\n                            true\n                        ),\n                    }),\n                    id: record.id,\n                    ...translateOptions,\n                }}\n                onConfirm={handleDelete}\n                onClose={handleDialogClose}\n            />\n        </Fragment>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nexport interface DeleteWithConfirmButtonProps<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown\n> extends ButtonProps {\n    confirmTitle?: string;\n    confirmContent?: React.ReactNode;\n    icon?: ReactElement;\n    mutationMode?: MutationMode;\n    onClick?: ReactEventHandler<any>;\n    // May be injected by Toolbar - sanitized in Button\n    translateOptions?: object;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        DeleteParams<RecordType>\n    >;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n}\n\nDeleteWithConfirmButton.propTypes = {\n    className: PropTypes.string,\n    confirmTitle: PropTypes.string,\n    confirmContent: PropTypes.string,\n    label: PropTypes.string,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    record: PropTypes.any,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n    translateOptions: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}