'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _class, _temp2;

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getRates = require('./api/get-rates');

var _getRates2 = _interopRequireDefault(_getRates);

var _ipData = require('./api/ip-data');

var _ipData2 = _interopRequireDefault(_ipData);

var _conversor = require('./utils/conversor');

var _conversor2 = _interopRequireDefault(_conversor);

var _request = require('./utils/request');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LocalCurrency = (_temp2 = _class = function (_React$Component) {
  _inherits(LocalCurrency, _React$Component);

  function LocalCurrency() {
    var _temp, _this, _ret;

    _classCallCheck(this, LocalCurrency);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      data: null,
      loading: true,
      error: null
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  LocalCurrency.prototype.componentDidMount = function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var _props, OXR_API_ID, amount, base, _ref2, currency, r, fxInstance;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _props = this.props, OXR_API_ID = _props.OXR_API_ID, amount = _props.amount, base = _props.base;
              _context.prev = 1;
              _context.next = 4;
              return this.getDataFromIPData();

            case 4:
              _ref2 = _context.sent;
              currency = _ref2.currency;
              _context.next = 8;
              return (0, _getRates2.default)(OXR_API_ID, base).then(_request.checkHttpStatus).then(_request.parseJSON);

            case 8:
              r = _context.sent;
              fxInstance = (0, _conversor2.default)(r);


              this.setState({
                data: {
                  amount: fxInstance(amount).from(base).to(currency.code),
                  currency: currency.code
                },
                loading: null,
                error: null
              });
              _context.next = 16;
              break;

            case 13:
              _context.prev = 13;
              _context.t0 = _context['catch'](1);

              this.setState({
                error: _context.t0,
                loading: null
              });

            case 16:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this, [[1, 13]]);
    }));

    function componentDidMount() {
      return _ref.apply(this, arguments);
    }

    return componentDidMount;
  }();

  LocalCurrency.prototype.getDataFromIPData = function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
      var _props2, IPDATA_API_KEY, accept, _ref4, currency, threat;

      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _props2 = this.props, IPDATA_API_KEY = _props2.IPDATA_API_KEY, accept = _props2.accept;
              _context2.next = 3;
              return (0, _ipData2.default)(null, IPDATA_API_KEY).then(_request.checkHttpStatus).then(_request.parseJSON);

            case 3:
              _ref4 = _context2.sent;
              currency = _ref4.currency;
              threat = _ref4.threat;

              if (!(threat.is_tor || threat.is_proxy || threat.is_anonymous)) {
                _context2.next = 8;
                break;
              }

              throw new Error('Unable to find the customer\'s currency');

            case 8:
              if (!(!accept.lenght && accept.includes(currency))) {
                _context2.next = 10;
                break;
              }

              throw new Error('Invalid currency');

            case 10:
              return _context2.abrupt('return', { currency: currency });

            case 11:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function getDataFromIPData() {
      return _ref3.apply(this, arguments);
    }

    return getDataFromIPData;
  }();

  LocalCurrency.prototype.render = function render() {
    var _props3 = this.props,
        children = _props3.children,
        render = _props3.render;


    if (children) {
      return children(this.state);
    }
    if (render) {
      return render(this.state);
    }

    console.error('Component LocalCurrency:', 'no children or render prop are present');

    return null;
  };

  return LocalCurrency;
}(React.Component), _class.displayName = 'LocalCurrency', _class.defaultProps = {
  children: null,
  render: null,
  accept: []
}, _temp2);
LocalCurrency.propTypes = process.env.NODE_ENV !== "production" ? {
  accept: _propTypes2.default.array,
  amount: _propTypes2.default.number.isRequired,
  base: _propTypes2.default.string.isRequired,
  IPDATA_API_KEY: _propTypes2.default.string.isRequired,
  OXR_API_ID: _propTypes2.default.string.isRequired,
  children: _propTypes2.default.func,
  render: _propTypes2.default.func
} : {};
exports.default = LocalCurrency;
module.exports = exports['default'];