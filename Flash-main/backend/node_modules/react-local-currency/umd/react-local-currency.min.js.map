{"version":3,"sources":["webpack://ReactLocalCurrency/webpack/universalModuleDefinition","webpack://ReactLocalCurrency/webpack/bootstrap","webpack://ReactLocalCurrency/./node_modules/babel-runtime/regenerator/index.js","webpack://ReactLocalCurrency/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://ReactLocalCurrency/./node_modules/url-join/lib/url-join.js","webpack://ReactLocalCurrency/./node_modules/money/money.js","webpack://ReactLocalCurrency/./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js","webpack://ReactLocalCurrency/./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js","webpack://ReactLocalCurrency/./src/api/get-rates.js","webpack://ReactLocalCurrency/./src/api/ip-data.js","webpack://ReactLocalCurrency/./src/utils/conversor.js","webpack://ReactLocalCurrency/./src/utils/request.js","webpack://ReactLocalCurrency/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","context","definition","undefined","this","strArray","resultArray","match","length","first","shift","replace","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","fx","obj","fxWrapper","version","fxSetup","rates","base","settings","from","to","convert","val","opts","getRatesCustom","getRate","msg","Error","_v","parseFloat","_fx","fxProto","args","Array","unshift","apply","currency","wrapped","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","then","result","done","toString","keys","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","stop","rootRecord","completion","type","rval","dispatchException","exception","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","getRates","OXR_API_ID","fetch","url","ipdata","ip","apiKey","urljoin","conversor","_ref","fxInstance","checkHttpStatus","response","status","error","statusText","parseJSON","json","LocalCurrency","data","loading","componentDidMount","props","amount","getDataFromIPData","setState","code","IPDATA_API_KEY","accept","threat","is_tor","is_proxy","is_anonymous","lenght","includes","render","_props3","children","console","React","defaultProps"],"mappings":"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","file":"react-local-currency.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactLocalCurrency\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactLocalCurrency\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"regenerator-runtime\");\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","/*!\n * money.js / fx() v0.3\n * Copyright 2014 Open Exchange Rates\n *\n * JavaScript library for realtime currency conversion and exchange rate calculation.\n *\n * Freely distributable under the MIT license.\n * Portions of money.js are inspired by or borrowed from underscore.js\n *\n * For details, examples and documentation:\n * http://openexchangerates.github.io/money.js/\n */\n(function(root, undefined) {\n\tvar factory = function() {\n\t\t// Create a safe reference to the money.js object for use below.\n\t\tvar fx = function(obj) {\n\t\t\treturn new fxWrapper(obj);\n\t\t};\n\n\t\t// Current version.\n\t\tfx.version = '0.3.0';\n\n\n\t\t/* --- Setup --- */\n\n\t\t// fxSetup can be defined before loading money.js, to set the exchange rates and the base\n\t\t// (and default from/to) currencies - or the rates can be loaded in later if needed.\n\t\tvar fxSetup = root.fxSetup || {\n\t\t\trates : {},\n\t\t\tbase : \"\"\n\t\t};\n\n\t\t// Object containing exchange rates relative to the fx.base currency, eg { \"GBP\" : \"0.64\" }\n\t\tfx.rates = fxSetup.rates;\n\n\t\t// Default exchange rate base currency (eg \"USD\"), which all the exchange rates are relative to\n\t\tfx.base = fxSetup.base;\n\n\t\t// Default from / to currencies for conversion via fx.convert():\n\t\tfx.settings = {\n\t\t\tfrom : fxSetup.from || fx.base,\n\t\t\tto : fxSetup.to || fx.base\n\t\t};\n\n\n\t\t/* --- Conversion --- */\n\n\t\t// The base function of the library: converts a value from one currency to another\n\t\tvar convert = fx.convert = function(val, opts) {\n\t\t\t// Convert arrays recursively\n\t\t\tif (typeof val === 'object' && val.length) {\n\t\t\t\tfor (var i = 0; i< val.length; i++ ) {\n\t\t\t\t\tval[i] = convert(val[i], opts);\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t}\n\n\t\t\t// Make sure we gots some opts\n\t\t\topts = opts || {};\n\n\t\t\t// We need to know the `from` and `to` currencies\n\t\t\tif( !opts.from ) opts.from = fx.settings.from;\n\t\t\tif( !opts.to ) opts.to = fx.settings.to;\n\n\t\t\t// Multiple the value by the exchange rate\n\t\t\tif ( !!opts.rates ) {\n\t\t\t\treturn val * getRatesCustom( opts.to, opts.from, opts.rates );\n\t\t\t}\n\t\t\treturn val * getRate( opts.to, opts.from );\n\t\t};\n\n\t\t// Returns the exchange rate to `target` currency from `base` currency\n\t\tvar getRate = fx.getRate = function(to, from) {\n\t\t\t// Save bytes in minified version\n\t\t\tvar rates = fx.rates;\n\n\t\t\t// Make sure the base rate is in the rates object:\n\t\t\trates[fx.base] = 1;\n\n\t\t\t// Throw an error if either rate isn't in the rates array\n\t\t\tif ( !rates[to] || !rates[from] ) {\n\t\t\t\tvar msg = 'Cannot convert ' + from + ' to ' + to + ': ';\n\n\t\t\t\tif ( !rates[to] && !rates[from] ) {\n\t\t\t\t\tmsg += 'exhange rates for both currencies are missing';\n\t\t\t\t} else if ( !rates[to] ) {\n\t\t\t\t\tmsg += 'exhange rate for ' + to + ' is missing';\n\t\t\t\t} else if ( !rates[from] ) {\n\t\t\t\t\tmsg += 'exhange rate for ' + from + ' is missing';\n\t\t\t\t}\n\n\t\t\t\tthrow new Error( msg );\n\t\t\t}\n\n\t\t\t// If `from` currency === fx.base, return the basic exchange rate for the `to` currency\n\t\t\tif ( from === fx.base ) {\n\t\t\t\treturn rates[to];\n\t\t\t}\n\n\t\t\t// If `to` currency === fx.base, return the basic inverse rate of the `from` currency\n\t\t\tif ( to === fx.base ) {\n\t\t\t\treturn 1 / rates[from];\n\t\t\t}\n\n\t\t\t// Otherwise, return the `to` rate multipled by the inverse of the `from` rate to get the\n\t\t\t// relative exchange rate between the two currencies\n\t\t\treturn rates[to] * (1 / rates[from]);\n\t\t};\n\n\n\t\t/* --- OOP wrapper and chaining --- */\n\n\t\t// If fx(val) is called as a function, it returns a wrapped object that can be used OO-style\n\t\tvar fxWrapper = function(val) {\n\t\t\t// Experimental: parse strings to pull out currency code and value:\n\t\t\tif ( typeof\tval === \"string\" ) {\n\t\t\t\tthis._v = parseFloat(val.replace(/[^0-9-.]/g, \"\"));\n\t\t\t\tthis._fx = val.replace(/([^A-Za-z])/g, \"\");\n\t\t\t} else {\n\t\t\t\tthis._v = val;\n\t\t\t}\n\t\t};\n\n\t\t// Expose `wrapper.prototype` as `fx.prototype`\n\t\tvar fxProto = fx.prototype = fxWrapper.prototype;\n\n\t\t// fx(val).convert(opts) does the same thing as fx.convert(val, opts)\n\t\tfxProto.convert = function() {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\tif (typeof this._v !== 'undefined') {\n\t\t\t\targs.unshift(this._v);\n\t\t\t}\n\t\t\treturn convert.apply(fx, args);\n\t\t};\n\n\t\t// fx(val).from(currency) returns a wrapped `fx` where the value has been converted from\n\t\t// `currency` to the `fx.base` currency. Should be followed by `.to(otherCurrency)`\n\t\tfxProto.from = function(currency) {\n\t\t\tvar wrapped = fx(convert(this._v, {from: currency, to: fx.base}));\n\t\t\twrapped._fx = fx.base;\n\t\t\treturn wrapped;\n\t\t};\n\n\t\t// fx(val).to(currency) returns the value, converted from `fx.base` to `currency`\n\t\tfxProto.to = function(currency) {\n\t\t\treturn convert(this._v, {from: this._fx ? this._fx : fx.settings.from, to: currency});\n\t\t};\n\n\t\treturn fx;\n\t};\n\t/* --- Module Definition --- */\n\n\t// Export the fx object for CommonJS. If being loaded as an AMD module, define it as such.\n\t// Otherwise, just add `fx` to the global object\n\tif (typeof exports !== 'undefined') {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = factory();\n\t\t}\n\t\texports.factory = factory;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\t// Return the library as an AMD module:\n\t\tdefine([], function() {\n\t\t\treturn factory();\n\t\t});\n\t} else {\n\t\t// Use fx.noConflict to restore `fx` back to its original value before money.js loaded.\n\t\t// Returns a reference to the library's `fx` object; e.g. `var money = fx.noConflict();`\n\t\tfx.noConflict = (function(previousFx) {\n\t\t\treturn function() {\n\t\t\t\t// Reset the value of the root's `fx` variable:\n\t\t\t\troot.fx = previousFx;\n\t\t\t\t// Delete the noConflict function:\n\t\t\t\tfx.noConflict = undefined;\n\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\treturn fx;\n\t\t\t};\n\t\t})(root.fx);\n\n\t\t// Declare `fx` on the root (global/window) object:\n\t\troot['fx'] = factory();\n\t}\n\n\t// Root will be `window` in browser or `global` on the server:\n}(this));\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","const getRates = (OXR_API_ID, base) => {\n  const url = `https://openexchangerates.org/api/latest.json?base=${base}&app_id=${OXR_API_ID}`\n\n  return fetch(url, { method: 'GET' }) // eslint-disable-line\n}\n\nexport default getRates\n","import * as urljoin from 'url-join'\n\nconst ipdata = (ip, apiKey) => {\n  const url = urljoin('https://api.ipdata.co/', `?api-key=${apiKey}`)\n\n  return fetch(url, { method: 'GET' }) // eslint-disable-line\n}\n\nexport default ipdata\n","import * as fx from 'money'\n\nconst conversor = ({ rates, base }) => {\n  const fxInstance = fx.factory()\n  fxInstance.rates = rates\n  fxInstance.base = base\n\n  return fxInstance\n}\n\nexport default conversor\n","const checkHttpStatus = (response) => {\n  if (response.status >= 200 && response.status < 300) {\n    return response\n  }\n  const error = new Error(response.statusText)\n  error.response = response\n  throw error\n}\n\nconst parseJSON = response => response.json()\n\nexport {\n  checkHttpStatus,\n  parseJSON\n}\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nimport getRates from './api/get-rates'\nimport ipdata from './api/ip-data'\n\nimport conversor from './utils/conversor'\nimport { checkHttpStatus, parseJSON } from './utils/request'\n\nclass LocalCurrency extends React.Component {\n  static displayName = 'LocalCurrency'\n\n  static propTypes = {\n    accept: PropTypes.array,\n    amount: PropTypes.number.isRequired,\n    base: PropTypes.string.isRequired,\n    IPDATA_API_KEY: PropTypes.string.isRequired,\n    OXR_API_ID: PropTypes.string.isRequired,\n    children: PropTypes.func,\n    render: PropTypes.func\n  };\n\n  static defaultProps = {\n    children: null,\n    render: null,\n    accept: []\n  }\n\n  state = {\n    data: null,\n    loading: true,\n    error: null\n  }\n\n  async componentDidMount () {\n    const { OXR_API_ID, amount, base } = this.props\n\n    try {\n      const { currency } = await this.getDataFromIPData()\n\n      const r = await getRates(OXR_API_ID, base)\n        .then(checkHttpStatus)\n        .then(parseJSON)\n\n      const fxInstance = conversor(r)\n\n      this.setState({\n        data: {\n          amount: fxInstance(amount).from(base).to(currency.code),\n          currency: currency.code\n        },\n        loading: null,\n        error: null\n      })\n    } catch (error) {\n      this.setState({\n        error,\n        loading: null\n      })\n    }\n  }\n\n  async getDataFromIPData () {\n    const { IPDATA_API_KEY, accept } = this.props\n\n    const { currency, threat } = await ipdata(null, IPDATA_API_KEY)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n\n    if (threat.is_tor || threat.is_proxy || threat.is_anonymous) {\n      throw new Error('Unable to find the customer\\'s currency')\n    }\n\n    if (!accept.lenght && accept.includes(currency)) {\n      throw new Error('Invalid currency')\n    }\n\n    return { currency }\n  }\n\n  render () {\n    const { children, render } = this.props\n\n    if (children) {\n      return children(this.state)\n    }\n    if (render) {\n      return render(this.state)\n    }\n\n    console.error(\n      'Component LocalCurrency:',\n      'no children or render prop are present'\n    )\n\n    return null\n  }\n}\n\nexport default LocalCurrency\n"],"sourceRoot":""}